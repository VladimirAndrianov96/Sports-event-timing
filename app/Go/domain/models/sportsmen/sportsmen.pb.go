// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sportsmen.proto

package sportsmen

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SportsmenCreatedEvent struct {
	SportsmenID          string   `protobuf:"bytes,1,opt,name=SportsmenID,proto3" json:"SportsmenID,omitempty"`
	StartNumber          uint32   `protobuf:"varint,2,opt,name=StartNumber,proto3" json:"StartNumber,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Version              uint32   `protobuf:"varint,255,opt,name=Version,proto3" json:"Version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SportsmenCreatedEvent) Reset()         { *m = SportsmenCreatedEvent{} }
func (m *SportsmenCreatedEvent) String() string { return proto.CompactTextString(m) }
func (*SportsmenCreatedEvent) ProtoMessage()    {}
func (*SportsmenCreatedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9830e3586cd45bd4, []int{0}
}
func (m *SportsmenCreatedEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SportsmenCreatedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SportsmenCreatedEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SportsmenCreatedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SportsmenCreatedEvent.Merge(m, src)
}
func (m *SportsmenCreatedEvent) XXX_Size() int {
	return m.Size()
}
func (m *SportsmenCreatedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SportsmenCreatedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SportsmenCreatedEvent proto.InternalMessageInfo

func (m *SportsmenCreatedEvent) GetSportsmenID() string {
	if m != nil {
		return m.SportsmenID
	}
	return ""
}

func (m *SportsmenCreatedEvent) GetStartNumber() uint32 {
	if m != nil {
		return m.StartNumber
	}
	return 0
}

func (m *SportsmenCreatedEvent) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *SportsmenCreatedEvent) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *SportsmenCreatedEvent) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterType((*SportsmenCreatedEvent)(nil), "sportsmen.SportsmenCreatedEvent")
}

func init() { proto.RegisterFile("sportsmen.proto", fileDescriptor_9830e3586cd45bd4) }

var fileDescriptor_9830e3586cd45bd4 = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x2e, 0xc8, 0x2f,
	0x2a, 0x29, 0xce, 0x4d, 0xcd, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0x6d, 0x60, 0xe4, 0x12, 0x0d, 0x86, 0xf1, 0x9c, 0x8b, 0x52, 0x13, 0x4b, 0x52, 0x53, 0x5c, 0xcb,
	0x52, 0xf3, 0x4a, 0x84, 0x14, 0xb8, 0xb8, 0xe1, 0x12, 0x9e, 0x2e, 0x12, 0x8c, 0x0a, 0x8c, 0x1a,
	0x9c, 0x41, 0xc8, 0x42, 0x60, 0x15, 0x25, 0x89, 0x45, 0x25, 0x7e, 0xa5, 0xb9, 0x49, 0xa9, 0x45,
	0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xbc, 0x41, 0xc8, 0x42, 0x42, 0x32, 0x5c, 0x9c, 0x6e, 0x99, 0x45,
	0xc5, 0x25, 0x7e, 0x89, 0xb9, 0xa9, 0x12, 0xcc, 0x60, 0x13, 0x10, 0x02, 0x42, 0x52, 0x5c, 0x1c,
	0x3e, 0x89, 0x50, 0x49, 0x16, 0xb0, 0x24, 0x9c, 0x2f, 0x24, 0xc9, 0xc5, 0x1e, 0x96, 0x5a, 0x54,
	0x9c, 0x99, 0x9f, 0x27, 0xf1, 0x9f, 0x11, 0x6c, 0x30, 0x8c, 0xef, 0x24, 0x70, 0xe2, 0x91, 0x1c,
	0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0xce, 0x78, 0x2c, 0xc7, 0x90, 0xc4, 0x06,
	0xf6, 0x96, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x3a, 0xe5, 0x0a, 0xea, 0xe9, 0x00, 0x00, 0x00,
}

func (m *SportsmenCreatedEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SportsmenCreatedEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SportsmenCreatedEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Version != 0 {
		i = encodeVarintSportsmen(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0xf
		i--
		dAtA[i] = 0xf8
	}
	if len(m.LastName) > 0 {
		i -= len(m.LastName)
		copy(dAtA[i:], m.LastName)
		i = encodeVarintSportsmen(dAtA, i, uint64(len(m.LastName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.FirstName) > 0 {
		i -= len(m.FirstName)
		copy(dAtA[i:], m.FirstName)
		i = encodeVarintSportsmen(dAtA, i, uint64(len(m.FirstName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.StartNumber != 0 {
		i = encodeVarintSportsmen(dAtA, i, uint64(m.StartNumber))
		i--
		dAtA[i] = 0x10
	}
	if len(m.SportsmenID) > 0 {
		i -= len(m.SportsmenID)
		copy(dAtA[i:], m.SportsmenID)
		i = encodeVarintSportsmen(dAtA, i, uint64(len(m.SportsmenID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintSportsmen(dAtA []byte, offset int, v uint64) int {
	offset -= sovSportsmen(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SportsmenCreatedEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SportsmenID)
	if l > 0 {
		n += 1 + l + sovSportsmen(uint64(l))
	}
	if m.StartNumber != 0 {
		n += 1 + sovSportsmen(uint64(m.StartNumber))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovSportsmen(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovSportsmen(uint64(l))
	}
	if m.Version != 0 {
		n += 2 + sovSportsmen(uint64(m.Version))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSportsmen(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSportsmen(x uint64) (n int) {
	return sovSportsmen(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SportsmenCreatedEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSportsmen
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SportsmenCreatedEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SportsmenCreatedEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SportsmenID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSportsmen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSportsmen
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSportsmen
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SportsmenID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartNumber", wireType)
			}
			m.StartNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSportsmen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartNumber |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSportsmen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSportsmen
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSportsmen
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSportsmen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSportsmen
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSportsmen
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 255:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSportsmen
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSportsmen(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSportsmen
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSportsmen(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSportsmen
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSportsmen
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSportsmen
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSportsmen
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSportsmen
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSportsmen
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSportsmen        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSportsmen          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSportsmen = fmt.Errorf("proto: unexpected end of group")
)
